Vicente Lucero
Ignacio Parrague

Parallel Binsearch:
El algoritmo consta en una division del arreglo original en arreglos de igual tama√±os segun la cantidad de nucleos de procesamientos estan disponibles para el proceso. Luego de eso, se crean la misma cantidad de threads que cantidad de arreglos y a cada uno se le asigna esas divisiones a cada uno de ellos para realizar la busqueda. Para ello es necesario la utilizacion de una funcion extra de busqueda binaria que es utilizada por los threads para cumplir el objetivo. 

int parallel_binsearch(int *arrey[], int size, int num, int P  ) {		
		int max_parallels = sysconf(_SC_NPROCESSORS_ONLN);
		pthread_t m_tid[max_treadds];
		int parallels = size / max_parallels;
		int mult = 1;	
		for(int i=0;i<max_parallels;i++)
		{
			data -> arguments
			if (pthread_create(&m_tid[i], NULL, (void *)binsearch, info))
			{
				free(infor)
			}
			num = parallels * mult
			mult++;
		}

void *binsearch(void *data)
	infor *args = data;
	while(min<max && end != 'V')
		mid = (min + max) / 2
		if (position<mid)
			max = mid-1
		else if (position>mid)
			min = mid+1			
		else
			finish = 'V'
			exit(thread)
	return 0;
